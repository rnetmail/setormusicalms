# /docker-compose.yml - Versão PostgreSQL Exclusiva
# Atualizado em 12/08/2025 - Configurado para usar exclusivamente PostgreSQL

services:
  # Serviço de banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: setormusicalms-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=mestre
      - POSTGRES_PASSWORD=Setor@MS25
      - POSTGRES_DB=setormusicalms_db
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mestre -d setormusicalms_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      
  backend:
    # Usa a imagem construída pelo CI/CD, que contém o código correto.
    image: ghcr.io/rnetmail/setormusicalms-backend:latest
    container_name: setormusicalms-backend
    # command: uvicorn main:app --host 0.0.0.0 --port 8000
    command: uvicorn fastapi_backend.main:app --host 0.0.0.0 --port 8000
    environment:
      # Configurado para usar PostgreSQL exclusivamente
      - DATABASE_URL=postgresql://mestre:Setor@MS25@db:5432/setormusicalms_db
      - POSTGRES_USER=mestre
      - POSTGRES_PASSWORD=Setor@MS25
      - POSTGRES_DB=setormusicalms_db
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=sua-chave-secreta-super-forte-aqui-min-32-chars
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - "8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/health', timeout=5)"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 90s

  frontend:
    # Usa a imagem construída pelo CI/CD.
    image: ghcr.io/rnetmail/setormusicalms-frontend:latest
    container_name: setormusicalms-frontend
    restart: unless-stopped
    expose:
      - "80"
    networks:
      - app-network

  nginx-proxy:
    image: nginx:stable-alpine
    container_name: setormusicalms-nginx-proxy
    ports:
      - "8001:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
