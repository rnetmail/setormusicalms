# .github/workflows/deploy.yml
# Versão 03 25/07/2025 18:05
name: CI/CD - Build, Push and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ghcr.io/${{ github.repository }}/backend
  IMAGE_NAME_FRONTEND: ghcr.io/${{ github.repository }}/frontend

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem do Backend
        uses: docker/build-push-action@v5
        with:
          context: ./fastapi_backend
          push: true
          tags: ${{ env.IMAGE_NAME_BACKEND }}:latest

      - name: Build e Push da imagem do Frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME_FRONTEND }}:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    # --- CORREÇÃO ADICIONADA AQUI ---
    # Declara que este job será executado no ambiente 'prod'
    # para ter acesso aos segredos corretos.
    environment: prod 
    steps:
      - name: Deploy na VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          password: ${{ secrets.VPS_SSH_PASS }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            PROJECT_DIR="/home/${{ secrets.VPS_SSH_USER }}/setormusicalms"
            
            echo ">> Acedendo ao diretório do projeto: $PROJECT_DIR"
            cd $PROJECT_DIR

            echo ">> Atualizando o código-fonte a partir do Git..."
            git pull origin main
            
            echo ">> Autenticando no GitHub Container Registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            echo ">> Parando e removendo contêineres antigos..."
            docker compose down --remove-orphans
            
            echo ">> Puxando as imagens mais recentes..."
            docker compose pull

            echo ">> (Re)Construindo as imagens localmente..."
            docker compose build --no-cache

            echo ">> Subindo os novos contêineres..."
            docker compose up -d

            echo ">> Aguardando 15s para a inicialização..."
            sleep 15
            
            echo ">> Verificando o estado dos contêineres..."
            docker compose ps

            echo ">> Exibindo logs recentes do backend..."
            docker compose logs backend --tail=50
            
            echo ">> ✅ Deploy finalizado."
