# .github/workflows/deploy.yml - Versão Corrigida Final
name: CI/CD - Testar, Construir e Implementar

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-backend
  IMAGE_NAME_FRONTEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-frontend

jobs:
  test:
    name: "🧪 Testar Build e Saúde"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4

      - name: "Iniciar serviços com Docker Compose"
        run: docker compose up -d --build

      - name: "Aguardar e validar saúde da API"
        run: |
          echo "⏳ Aguardando backend ficar saudável..."
          for i in {1..10}; do
            if docker compose ps | grep 'setormusicalms-backend' | grep -q '(healthy)'; then
              echo "✅ Backend está saudável!"
              exit 0
            fi
            sleep 15
          done
          echo "❌ ERRO: Backend não ficou saudável em 90 segundos."
          docker compose logs backend
          exit 1

      - name: "Encerrar containers após testes"
        if: always()
        run: docker compose down

  build_and_push:
    name: "🏗️ Construir e Publicar Imagens"
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4

      - name: "Login no GitHub Container Registry (GHCR)"
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build e Push da Imagem do Backend"
        uses: docker/build-push-action@v5
        with:
          context: ./fastapi_backend
          push: true
          tags: ${{ env.IMAGE_NAME_BACKEND }}:latest

      - name: "Build e Push da Imagem do Frontend"
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.IMAGE_NAME_FRONTEND }}:latest

  deploy:
    name: "🚀 Implementar na VPS"
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: "Deploy na VPS"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH_ON_VPS }}
            git fetch origin && git reset --hard origin/main
            mkdir -p ~/.docker
            echo "${{ secrets.DOCKER_CONFIG_JSON }}" > ~/.docker/config.json
            chmod 600 ~/.docker/config.json
            docker compose pull
            docker compose up -d --force-recreate --remove-orphans
            docker image prune -af
            echo "✅ Deploy concluído com sucesso!"
