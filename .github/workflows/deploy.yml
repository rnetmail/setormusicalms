# .github/workflows/deploy.yml
# Versão 112 - MODO DIAGNÓSTICO

name: CI/CD - Diagnosticar Ambiente de Produção

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-backend
  IMAGE_NAME_FRONTEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-frontend

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Login no GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build e Push das Imagens
        run: |
          docker build -t ${{ env.IMAGE_NAME_BACKEND }}:latest ./fastapi_backend && docker push ${{ env.IMAGE_NAME_BACKEND }}:latest
          docker build -t ${{ env.IMAGE_NAME_FRONTEND }}:latest . && docker push ${{ env.IMAGE_NAME_FRONTEND }}:latest

  deploy_and_diagnose:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Conectar, Fazer Deploy e Coletar Diagnósticos
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          password: ${{ secrets.VPS_SSH_PASS }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            PROJECT_DIR="${{ secrets.PROJECT_PATH_ON_VPS }}"

            echo ">>> [1/8] Acessando o diretório do projeto: $PROJECT_DIR"
            cd $PROJECT_DIR
            
            echo ">>> [2/8] DADO-CHAVE: Exibindo o docker-compose.yml ATUAL da VPS..."
            cat docker-compose.yml
            
            echo ">>> [3/8] Autenticando no GHCR..."
            mkdir -p ~/.docker
            echo '${{ secrets.DOCKER_CONFIG_JSON }}' > ~/.docker/config.json

            echo ">>> [4/8] Parando e removendo serviços antigos..."
            docker compose down --remove-orphans
            
            echo ">>> [5/8] Baixando as imagens mais recentes..."
            docker compose pull

            echo ">>> [6/8] Subindo os novos contêineres..."
            docker compose up -d

            echo ">>> [7/8] Aguardando 15s para a aplicação tentar iniciar..."
            sleep 15
            
            echo ">>> [8/8] DADOS DE DIAGNÓSTICO FINAL:"
            echo "--- STATUS DOS CONTÊINERES ---"
            docker compose ps
            echo "--- LOGS DO BACKEND ---"
            docker compose logs backend --tail=100 || echo "Não foi possível obter logs do backend."
            echo "--- VARIÁVEIS DE AMBIENTE DO BACKEND (INSPECIONANDO O CONTÊINER) ---"
            docker inspect $(docker compose ps -q backend) | grep -A 10 "Env"
            
            echo ">>> ✅ Diagnóstico concluído."
