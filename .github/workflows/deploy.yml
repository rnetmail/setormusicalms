# .github/workflows/deploy.yml
# Vers√£o 116 - Testes no Cont√™iner

name: CI/CD - Testar, Construir, Implementar e Validar

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-backend
  IMAGE_NAME_FRONTEND: ghcr.io/${{ github.repository_owner }}/setormusicalms-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: 2. Iniciar servi√ßos com Docker Compose
        run: docker compose up -d --build

      - name: 3. Executar testes dentro do cont√™iner
        run: |
          # Aguarda a API ficar saud√°vel antes de rodar os testes
          echo "‚è≥ Aguardando sa√∫de da API..."
          timeout=90
          until docker compose exec -T backend curl -sSf http://localhost:8000/api/health; do
            timeout=$((timeout - 5))
            if [ $timeout -le 0 ]; then
              echo "‚ùå A API n√£o ficou pronta em 90s"
              docker compose logs backend
              exit 1
            fi
            sleep 5
          done
          echo "‚úÖ API saud√°vel!"
          
          # Inicializa o admin antes dos testes
          docker compose exec -T backend python /app/init_admin.py
          
          # Roda o pytest DENTRO do cont√™iner
          echo "üöÄ Executando testes com pytest..."
          docker compose exec -T backend pytest

      - name: 4. Encerrar containers ap√≥s testes
        if: always()
        run: docker compose down

  # ... (O restante do arquivo build_and_push e deploy_and_validate permanece o mesmo)
