name: CI/CD - Build, Test, Deploy

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    name: Etapas CI/CD - Testar, Construir, Deploy, Validar
    runs-on: ubuntu-latest

    steps:
      # Etapa 1 - Checkout e Testes
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Criar Rede de Teste
        run: docker network create testnet || true

      - name: Construir Imagens de Teste
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml build --no-cache

      - name: Subir Contêineres para Teste
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up -d

      - name: Executar Testes Automatizados (Pytest)
        run: docker compose exec backend pytest

      - name: Executar Testes de Qualidade de Código (Opcional)
        run: docker compose exec backend flake8 app || true

      - name: Encerrar Contêineres de Teste
        run: docker compose down

      # Etapa 2 - Build e Push para GHCR
      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag das Imagens e Push para GHCR
        run: |
          docker build -t ghcr.io/${{ github.repository }}/backend:latest ./backend
          docker build -t ghcr.io/${{ github.repository }}/nginx:latest ./nginx

          docker push ghcr.io/${{ github.repository }}/backend:latest
          docker push ghcr.io/${{ github.repository }}/nginx:latest

      # Etapa 3 - Deploy na VPS via SSH
      - name: Deploy na VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            echo ">> Indo para o diretório do projeto"
            cd ~/setormusicalms

            echo ">> Parando serviços antigos..."
            docker compose down

            echo ">> Atualizando imagens..."
            docker compose pull

            echo ">> Subindo a nova versão..."
            docker compose up -d
          EOF

      # Etapa 4 - Validação de Funcionalidade Pós-Deploy
      - name: Validar Endpoints da Aplicação
        run: |
          curl -f http://setormusicalms.art.br/api/repertorio
          curl -f http://setormusicalms.art.br
